[
  {
    "type": "function",
    "name": "google_calendar-list-events",
    "description": "Retrieve a list of event from the Google Calendar. [See the documentation](https://developers.google.com/calendar/api/v3/reference/events/list)\n\n\n\n\n\nIMPORTANT: The arguments have specific formats. Please follow the instructions below:\n- eventTypes: Return JSON in this format: string[]",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "Optionally select the calendar, defaults to the primary calendar for the logged-in user\n\nYou can use the \"CONFIGURE_COMPONENT\" tool using these parameters to get the values. key: google_calendar-list-events, propName: calendarId"
        },
        "iCalUID": {
          "type": "string",
          "description": "Specifies event ID in the iCalendar format to be included in the response. Optional."
        },
        "maxAttendees": {
          "type": "integer",
          "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional."
        },
        "maxResults": {
          "type": "integer",
          "description": "Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events. Optional."
        },
        "orderBy": {
          "type": "string",
          "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order. Must set Single Events to `true` to order by `startTime`."
        },
        "privateExtendedProperty": {
          "type": "string",
          "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints."
        },
        "q": {
          "type": "string",
          "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional."
        },
        "sharedExtendedProperty": {
          "type": "string",
          "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints."
        },
        "showDeleted": {
          "type": "boolean",
          "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False."
        },
        "showHiddenInvitations": {
          "type": "boolean",
          "description": "Whether to include hidden invitations in the result. Optional. The default is False."
        },
        "singleEvents": {
          "type": "boolean",
          "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False."
        },
        "timeMax": {
          "type": "string",
          "description": "Upper bound (exclusive) for an event's time to filter by. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. Must be greater than Min Time."
        },
        "timeMin": {
          "type": "string",
          "description": "Lower bound (exclusive) for an event's time to filter by. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. Must be smaller than Max Time."
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.\n\nYou can use the \"CONFIGURE_COMPONENT\" tool using these parameters to get the values. key: google_calendar-list-events, propName: timeZone"
        },
        "updatedMin": {
          "type": "string",
          "description": "Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time."
        },
        "eventTypes": {
          "type": "string",
          "description": "Filter events by event type"
        }
      },
      "required": [
        "calendarId",
        "iCalUID",
        "maxAttendees",
        "maxResults",
        "orderBy",
        "privateExtendedProperty",
        "q",
        "sharedExtendedProperty",
        "showDeleted",
        "showHiddenInvitations",
        "singleEvents",
        "timeMax",
        "timeMin",
        "timeZone",
        "updatedMin",
        "eventTypes"
      ],
      "additionalProperties": false
    },
    "strict": true
  },
  {
    "type": "function",
    "name": "google_calendar-get-event",
    "description": "Retrieve event details from Google Calendar. [See the documentation](https://googleapis.dev/nodejs/googleapis/latest/calendar/classes/Resource$Events.html#get)",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "Optionally select the calendar, defaults to the primary calendar for the logged-in user\n\nYou can use the \"CONFIGURE_COMPONENT\" tool using these parameters to get the values. key: google_calendar-get-event, propName: calendarId"
        },
        "eventId": {
          "type": "string",
          "description": "Select an event from Google Calendar.\n\nYou can use the \"CONFIGURE_COMPONENT\" tool using these parameters to get the values. key: google_calendar-get-event, propName: eventId"
        }
      },
      "required": [
        "calendarId",
        "eventId"
      ],
      "additionalProperties": false
    },
    "strict": true
  },
  {
    "type": "function",
    "name": "google_calendar-update-event",
    "description": "Update an event from Google Calendar. [See the documentation](https://googleapis.dev/nodejs/googleapis/latest/calendar/classes/Resource$Events.html#update)",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "Optionally select the calendar, defaults to the primary calendar for the logged-in user\n\nYou can use the \"CONFIGURE_COMPONENT\" tool using these parameters to get the values. key: google_calendar-update-event, propName: calendarId"
        },
        "eventId": {
          "type": "string",
          "description": "Select an event from Google Calendar.\n\nYou can use the \"CONFIGURE_COMPONENT\" tool using these parameters to get the values. key: google_calendar-update-event, propName: eventId"
        },
        "summary": {
          "type": "string",
          "description": "Enter a title for the event, (e.g., `My event`)"
        },
        "eventStartDate": {
          "type": "string",
          "description": "For all-day events, enter the Event day in the format `yyyy-mm-dd`. For events with time, format according to [RFC3339](https://www.rfc-editor.org/rfc/rfc3339.html#section-1): `yyyy-mm-ddThh:mm:ss+01:00`. A time zone offset is required unless a time zone is explicitly specified in timeZone."
        },
        "eventEndDate": {
          "type": "string",
          "description": "For all-day events, enter the Event day in the format `yyyy-mm-dd`. For events with time, format according to [RFC3339](https://www.rfc-editor.org/rfc/rfc3339.html#section-1): `yyyy-mm-ddThh:mm:ss+01:00`. A time zone offset is required unless a time zone is explicitly specified in timeZone."
        },
        "location": {
          "type": "string",
          "description": "Specify the location of the event"
        },
        "description": {
          "type": "string",
          "description": "Enter a description for the event"
        },
        "attendees": {
          "type": "string",
          "description": "Enter either an array or a comma separated list of email addresses of attendees"
        },
        "repeatFrequency": {
          "type": "string",
          "description": "Select a frequency to make this event repeating"
        },
        "repeatInterval": {
          "type": "integer",
          "description": "Enter 1 to \"repeat every day\", enter 2 to \"repeat every other day\", etc. Defaults to 1."
        },
        "repeatUntil": {
          "type": "string",
          "description": "The event will repeat only until this date, if set"
        },
        "repeatTimes": {
          "type": "integer",
          "description": "Limit the number of times this event will occur"
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.\n\nYou can use the \"CONFIGURE_COMPONENT\" tool using these parameters to get the values. key: google_calendar-update-event, propName: timeZone"
        },
        "sendUpdates": {
          "type": "string",
          "description": "Configure whether to send notifications about the event"
        }
      },
      "required": [
        "calendarId",
        "eventId",
        "summary",
        "eventStartDate",
        "eventEndDate",
        "location",
        "description",
        "attendees",
        "repeatFrequency",
        "repeatInterval",
        "repeatUntil",
        "repeatTimes",
        "timeZone",
        "sendUpdates"
      ],
      "additionalProperties": false
    },
    "strict": true
  }
]